- defaults:
    link:
      relink: true
      create: true

- clean: ['~']

- link:
    ~/.bash_profile: home/bash_profile
    ~/.bashrc: home/bashrc
    ~/.zshrc: home/zshrc
    ~/.zprofile: home/zprofile
    ~/.taskrc: home/taskrc
    ~/.vimrc: home/vimrc
    ~/.pylintrc: home/pylintrc
    ~/.config/nvim: config/nvim
    ~/.vim/init.vim: vim/init.vim
    ~/.vim/plugins.vim: vim/plugins.vim
    ~/.vim/custom_commands.vim: vim/custom_commands.vim
    ~/.vim/spell: vim/spell
    ~/.vim/run_pyls_with_venv.sh: vim/run_pyls_with_venv.sh
    ~/.vim/pydocstring_template: vim/pydocstring_template
    ~/.config/pycodestyle: config/pycodestyle
    ~/.config/kitty/kitty.conf: config/kitty.conf
    ~/.ipython/profile_default/ipython_config.py: ipython/profile_default/ipython_config.py
    ~/.jupyter/jupyter_qtconsole_config.py: jupyter/jupyter_qtconsole_config.py


- shell:
  - [git submodule update --init --recursive, Installing submodules]
  - [defaults write -g InitialKeyRepeat -int 15 && defaults write -g KeyRepeat 1, Change KeyRepeat settings]
  - [defaults write -g ApplePressAndHoldEnabled -bool false, Disable press and hold for acented charaters]
  - 
    command: command -v brew >/dev/null 2>&1 || /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" || 0
    stdin: true
    stdout: true
    description: Install homebrew
  - [brew install python && brew pin python, Installing python]
  - [brew install pyenv, Installing pyenv]
  - [pyenv install 3.8.12, Installing python 3.8.6]
  - [pyenv install 3.9.7, Installing python 3.9.7]
  - ["curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python", Installing poetry]
  -
    command: brew install pyqt
    description: Installing pyqt
    stderr: true
  - 
    command: brew install pandoc
    description: Installing pandoc
    stderr: true
  - 
    command: brew install pandoc-citeproc.rb
    description: Installing pandoc citeproc
    stderr: true
  - 
    command: brew install neovim
    description: Install neovim
    stderr: true
  - 
    command: brew install fzf ripgrep editorconfig
    stdin: true
    stdout: true
    description: Install neovim, fzf, ripgrep and editorconfig
  - 
    command: brew install task timewarrior tasksh
    stdin: true
    stdout: true
    description: Install taskwarrior and taskwarrior shell
  - [python3 -m venv --clear ~/.neovim_venv, Create neovim venv]
  - 
    command: ~/.neovim_venv/bin/pip install --upgrade --no-cache pynvim doq jupyter qtconsole python-lsp-server flake8 pyflakes pep8-naming mypy-ls python-lsp-black pyls-isort rope pydocstyle jupyter_qtconsole_colorschemes
    description: Set up neovim venv
    stdin: true
    stdout: true
  - ['~/.neovim_venv/bin/pip install --upgrade --no-cache git+https://github.com/ExpectationMax/pylint-venv.git', Installing custom pylint-venv]
  - [brew install pipx, Installing pipx]
  - [pipx reinstall-all, Reinstall pipx packages in case system python was upgraded]
  - [pipx install neovim-remote, Installing neovim-remote executable]
  - 
    command: brew tap homebrew/cask-fonts || brew install --cask font-fira-code
    stdin: true
    stdout: true
    description: Add fonts tap and install Fira Code
  - 
    command: brew install --cask kitty google-chrome google-drive macpass slack obsidian marked
    stdin: true
    stdout: true
    description: Install kitty terminal emulator, Google Chrome, macpass, slack, obsidian, marked
